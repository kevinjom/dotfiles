" vundle bundles
if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

syntax on

filetype on
filetype indent on
filetype plugin on

let mapleader=" "      " leader key

set clipboard=unnamed  " copy to system clipboard
" set paste            " copy from system clipboard and do NOT use this because it will disable many other options
set nu
set backspace=2
set textwidth=80
" set colorcolumn=+3

" set hlsearch  " highlight search
set ic        " case insenstive search
set incsearch

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set shiftround
set expandtab

set autowriteall  " save the file when you switch buffers
set autoindent

" List chars [copied from janus' config]
set list
set listchars=""                  " Reset the listchars
set listchars=tab:\ \             " a tab should display as "  ", trailing whitespace as "."
set listchars+=trail:.            " show trailing spaces as dots

set wildignore+=*/tmp/*,*.so,*.swp,*.zip

" autocmd
" autocmd VimEnter * execute 'NERDTree' | wincmd p

" ---------------------------------
"  maps
" ---------------------------------
nmap <leader>o :Tagbar<CR>           " toggle Tagbar

" NERDTree
nmap <leader>n :NERDTree<CR>         " toggle NERDTree
nmap <leader>nc :NERDTreeClose<CR>   " close NERDTree
nmap <leader>nf :NERDTreeFind<CR>         " toggle NERDTree

" reload vim config
nmap <leader>r :source ~/.vimrc<CR>      " reload vim config

" disable arrow keys
nnoremap <Left> <NOP>
nnoremap <Right> <NOP>
nnoremap <Up> <NOP>
nnoremap <Down> <NOP>

" ---------------------------------
" option settings for plugins
" ---------------------------------

let g:ctrlp_custom_ignore='node_modules\|DS_Store\|bower_components'
let g:ctrlp_working_path_mode = 'a'
let NERDTreeShowHidden=1
let g:ctrlp_show_hidden = 1

" ultisnips
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsEditSplit="vertical"

" insearch
map z/ <Plug>(incsearch-fuzzy-/)
map z? <Plug>(incsearch-fuzzy-?)

"rust
map <Leader>rr :RustRun<CR>

" rspec
:nnoremap <leader>rt :Dispatch rspec %<CR>
:nnoremap <leader>ra :Dispatch rspec .<CR>
:nnoremap <leader>rl :execute "Dispatch rspec %:" . line(".")<CR>

" java
:nnoremap <leader>jc :!javac %<CR>

" ruby
:nnoremap <leader>rr :!ruby -r rb-readline %<CR>

" ctrlp smart tabs
let g:ctrlp_extensions = ['smarttabs']
nnoremap <leader>e :CtrlPSmartTabs<CR>

" ale
let g:ale_fix_on_save = 1
let g:ale_completion_enabled = 1
